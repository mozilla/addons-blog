version: 2.1

references:
  attach_deploy_workspace: &attach_deploy_workspace
    attach_workspace:
      at: .

  deployment_container: &deployment_container
    docker:
      - image: circleci/python:3.9-node

  install_aws_cli: &install_aws_cli
    run:
      name: Install AWS CLI
      command: |
        sudo pip install --upgrade pip
        sudo pip install --upgrade awscli

  persist_build_workspace: &persist_build_workspace
    persist_to_workspace:
      root: ./
      paths:
        - ./*

  restore_build_cache: &restore_build_cache
    restore_cache:
      name: restore yarn package cache
      keys:
        - yarn-packages-{{ checksum "yarn.lock" }}

  run_yarn_install: &run_yarn_install
    run:
      name: install dependencies
      # See: https://github.com/mozilla/addons-frontend/issues/3034
      command: yarn install --pure-lockfile

  save_build_cache: &save_build_cache
    save_cache:
      name: save yarn package cache
      key: yarn-packages-{{ checksum "yarn.lock" }}
      paths:
        - ~/.cache/yarn

jobs:
  wptheme:
    docker:
      - image: cimg/php:7.4-node
    steps:
      - checkout
      - *restore_build_cache
      - *run_yarn_install
      - *save_build_cache
      - run: yarn build:wptheme
      - run: yarn lint:php
      - run:
          name: run phpunit
          command: |
            composer install
            ./vendor/bin/phpunit
      - run: test -f wptheme.zip

  blog:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - *restore_build_cache
      - *run_yarn_install
      - *save_build_cache
      - run: yarn test-ci
      - run: yarn prettier-ci
      - run: yarn lint:js
      - run: yarn lint:scss
      - run:
          name: build assets
          command: |
            yarn sass:build
            yarn script:build
            bin/asset-pipeline
      - *persist_build_workspace

  deploy-dev:
    <<: *deployment_container
    steps:
      - *attach_deploy_workspace
      - *install_aws_cli
      - run:
          name: addons-blog deployment (dev)
          command: |
            pwd && ls -l
            AWS_ACCESS_KEY_ID="${DEV_AWS_ACCESS_KEY_ID}"          \
            AWS_SECRET_ACCESS_KEY="${DEV_AWS_SECRET_ACCESS_KEY}"  \
            ADDONS_BLOG_BUCKET="${DEV_ADDONS_BLOG_BUCKET}"        \
            ./bin/deploy.sh

workflows:
  version: 2
  default-workflow:
    jobs:
      - wptheme
      - blog
      - deploy-dev:
          requires:
            - blog
